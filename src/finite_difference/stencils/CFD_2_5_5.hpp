#ifndef CFD_2_5_5_HPP_
#define CFD_2_5_5_HPP_

#include "../compact_finite_differencing.hpp"

// ============================================================================
// Unfiltered: gamma[eta] = 1 (eta<=pi)
// Parameters A: M_L, M_R; B: M_L, M_R; p
// C: 2, 2; 2, 2; 7
// L:
//    1, 5; 1, 2; 7
//    0, 8; 0, 2; 7
// R:
//    8, 0; 0, 2; 7
//    5, 1; 2, 1; 7

// LHS:
// center -------------------------------------------------
template<>
const std::vector<Real> FDCompactStencil<
  2, 5, 5, 0, 0
>::LcoeffC = {
  0.009754028837998303647158608990670059372349448685,
  0.29177268871925360474978795589482612383375742154,
  1.0000000000000000000000000000000000000000000000,
  0.29177268871925360474978795589482612383375742154,
  0.009754028837998303647158608990670059372349448685
};

// left ---------------------------------------------------
template<>
const std::vector<std::vector<Real>> FDCompactStencil<
  2, 5, 5, 0, 0
>::LcoeffL = {
  {
    1.0000000000000000000000000000000000000000000,
    14.802476126810820116668663758544372557865440,
    6.7618993757582338425555794251419758001050845
  },
  {
    0.0334302325581395348837209302325581395348837209,
    1.000000000000000000000000000000000000000000000,
    3.39389534883720930232558139534883720930232558,
    0.858850129198966408268733850129198966408268734
  }
};

// right --------------------------------------------------
template<>
const std::vector<std::vector<Real>> FDCompactStencil<
  2, 5, 5, 0, 0
>::LcoeffR = {
  {
    0.858850129198966408268733850129198966408268734,
    3.39389534883720930232558139534883720930232558,
    1.000000000000000000000000000000000000000000000,
    0.0334302325581395348837209302325581395348837209
  },
  {
    6.7618993757582338425555794251419758001050845,
    14.802476126810820116668663758544372557865440,
    1.0000000000000000000000000000000000000000000
  }
};

// collected ----------------------------------------------
template<>
const std::vector<std::vector<unsigned int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Loffset = {
  {0, 1},
  {2},
  {2, 2}
};

template<>
const std::vector<std::vector<unsigned int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Lwidth = {
  {3, 4},
  {5},
  {4, 3}
};

template<>
const std::vector<std::vector<int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Lrix = {
  {0, 2}, {2, -2}, {-2, 0}
};
// --------------------------------------------------------

// RHS:
// center -------------------------------------------------
template<>
const std::vector<Real> FDCompactStencil<
  2, 5, 5, 0, 0
>::RcoeffC = {
  0.19720101781170483460559796437659033078880407125,
  0.8142493638676844783715012722646310432569974555,
  -2.0229007633587786259541984732824427480916030534,
  0.8142493638676844783715012722646310432569974555,
  0.19720101781170483460559796437659033078880407125
};

// left ---------------------------------------------------
template<>
const std::vector<std::vector<Real>> FDCompactStencil<
  2, 5, 5, 0, 0
>::RcoeffL = {
  {
    15.104332097067073469890777434365557433079160,
    -19.575090508236105905808388291132734964127593,
    -11.764657556131433494652158985303557169779260867345,
    25.569100023032198438804171415670623005469414,
    -14.774944745090373617648905483798236712532030,
    7.6118538648318622777970210267084820307700560,
    -2.6870525546546062714983304192507238466897181,
    0.57174449791888253562581509004186172678575371,
    -0.055285118737497432510001787301271502975781939
  },
  {
    0.676346719781797301177146138386448463967843813,
    2.77175387596899224806201550387596899224806202,
    -7.06964631782945736434108527131782945736434109,
    3.10064958369221935113407981625035888601780075,
    0.539365310077519379844961240310077519379844961,
    -0.01894379844961240310077519379844961240310077519,
    0.000474626758541487223657766293425208153890324433
  }
};

// right --------------------------------------------------
template<>
const std::vector<std::vector<Real>> FDCompactStencil<
  2, 5, 5, 0, 0
>::RcoeffR = {
  {
    0.000474626758541487223657766293425208153890324433,
    -0.01894379844961240310077519379844961240310077519,
    0.539365310077519379844961240310077519379844961,
    3.10064958369221935113407981625035888601780075,
    -7.06964631782945736434108527131782945736434109,
    2.77175387596899224806201550387596899224806202,
    0.676346719781797301177146138386448463967843813
  },
  {
    -0.055285118737497432510001787301271502975781939,
    0.57174449791888253562581509004186172678575371,
    -2.6870525546546062714983304192507238466897181,
    7.6118538648318622777970210267084820307700560,
    -14.774944745090373617648905483798236712532030,
    25.569100023032198438804171415670623005469414,
    -11.764657556131433494652158985303557169779260867345,
    -19.575090508236105905808388291132734964127593,
    15.104332097067073469890777434365557433079160
  }
};

// collected ----------------------------------------------
template<>
const std::vector<std::vector<unsigned int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Roffset = {
  {0, 1}, // left
  {2},    // center
  {5, 8}  // right
};

template<>
const std::vector<std::vector<unsigned int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Rwidth = {
  {9, 7}, // left
  {5},    // center
  {7, 9}  // right
};

template<>
const std::vector<std::vector<int>> FDCompactStencil<
  2, 5, 5, 0, 0
>::Rrix = {
  {0, 2}, {2, -2}, {-2, 0}  // left, center, right
};
// --------------------------------------------------------

// ============================================================================
// Filtered
// LHS:

#endif